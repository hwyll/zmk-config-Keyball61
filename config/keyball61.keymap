#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>


// higher number layers take precedence / override below
#define DFLT 0

// task specific layers
#define RNAV 1

// base layers which should always be accessible (i.e. num, nav, sys)
#define BASE 2 // same as DFLT except for thumbs, used to override DFLT keys onto custom layers
#define NUM  3 // numbers layer - numbers, symbols, function keys
#define NAV  4 // navigation layer - arrow keys, media controls
#define SYS  5 // system layer - toggle layer, bt controls
#define CSR  6 // cursor layer
#define SCR  7 // scroll layer

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};



/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        // num + nav = sys
        num_nav_sys_layer {
            if-layers = <NUM NAV>;
            then-layer = <SYS>;
        };

        // num + base = sys
        num_base_sys_layer {
            if-layers = <NUM BASE>;
            then-layer = <SYS>;
        };
    };

    combos {
            compatible = "zmk,combos";
            
        // qw = ESC
        esc {
            timeout-ms = <50>;
            key-positions = <14 15>;
            bindings = <&kp ESC>;
        };

        // qe = ALT+F4
        altf4 {
            timeout-ms = <50>;
            key-positions = <14 16>;
            bindings = <&kp LA(F4)>;
        };

        // ;bkps = DEL
        del {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&kp DEL>;
        };

        // io = (
        lpar {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&kp LPAR>;
        };
        // op = )
        rpar {
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&kp RPAR>;
        };

        // kl = [
        lbkt {
            timeout-ms = <50>;
            key-positions = <32 33>;
            bindings = <&kp LBKT>;
        };
        // l; = ]
        rbkt {
            timeout-ms = <50>;
            key-positions = <33 34>;
            bindings = <&kp RBKT>;
        };

        // ,. = {
        lbrc {
            timeout-ms = <50>;
            key-positions = <46 47>;
            bindings = <&kp LBRC>;
        };
        // ./ = }
        rbrc {
            timeout-ms = <50>;
            key-positions = <47 48>;
            bindings = <&kp RBRC>;
        };

    };

    keymap {
        compatible = "zmk,keymap";

        dflt {
            label = "dflt";
            bindings = <
&kp ESC       &kp N1    &kp N2     &kp N3      &kp N4     &kp N5                                      &kp N6      &kp N7   &kp N8      &kp N9    &kp N0         &kp GRAVE
&kp DEL       &kp Q     &kp W      &kp E       &kp R      &kp T                                       &kp Y       &kp U    &kp I       &kp O     &kp P          &kp BSPC
&kp TAB       &kp A     &kp S      &kp D       &kp F      &kp G                                       &kp H       &kp J    &kp K       &kp L     &lt CSR SEMI   &lt SCR SQT
&kp LSHIFT    &kp Z     &kp X      &kp C       &kp V      &kp B       &kp PG_UP          &kp PG_DN    &kp N       &kp M    &kp COMMA   &kp DOT   &kp FSLH       &lt RSHIFT BSLH
&kp LCTRL     &kp LALT  &mo SCR    &mo CSR     &kp LCTRL  &kp LGUI    &lt NUM SPACE      &lt NAV RET  &kp RSHFT                                  &kp RALT       &kp RCTRL
            >;
        };


        // task layers


        rnav {
            label = "rnav";
            bindings = <
&trans  &trans    &trans    &trans  &trans     &trans                    &trans         &trans     &trans     &trans     &trans     &trans
&trans  &trans    &trans    &trans  &trans     &trans                    &trans         &trans     &kp UP     &trans     &trans     &trans
&trans  &trans    &trans    &trans  &trans     &trans                    &trans         &kp LEFT   &kp DOWN   &kp RIGHT  &trans     &trans
&trans  &trans    &trans    &trans  &trans     &trans  &trans    &trans  &trans         &trans     &trans     &trans     &trans     &trans
&trans  &trans    &trans    &trans  &trans     &trans  &trans    &trans  &trans                                          &trans     &trans
            >;
        };


        // base layers


        base {
            label = "base";
            bindings = <
&kp ESC       &kp N1    &kp N2     &kp N3      &kp N4     &kp N5                                      &kp N6      &kp N7   &kp N8      &kp N9    &kp N0         &kp GRAVE
&kp DEL       &kp Q     &kp W      &kp E       &kp R      &kp T                                       &kp Y       &kp U    &kp I       &kp O     &kp P          &kp BSPC
&kp TAB       &kp A     &kp S      &kp D       &kp F      &kp G                                       &kp H       &kp J    &kp K       &kp L     &lt CSR SEMI   &lt SCR SQT
&kp LSHIFT    &kp Z     &kp X      &kp C       &kp V      &kp B       &kp PG_UP          &kp PG_DN    &kp N       &kp M    &kp COMMA   &kp DOT   &kp FSLH       &lt RSHIFT BSLH
&kp LCTRL     &kp LALT  &mo SCR    &mo CSR     &kp LCTRL  &kp LGUI    &lt NUM SPACE      &lt NAV RET  &kp RSHFT                                  &kp RALT       &kp RCTRL
            >;
        };

        num {
            label = "num";
            bindings = <
&trans          &trans     &trans        &trans        &trans   &trans                                  &trans     &trans     &trans     &trans      &trans       &trans
&trans          &kp N1     &kp N2        &kp N3        &kp N4   &kp N5                                  &kp N6     &kp N7     &kp N8     &kp N9      &kp N0       &trans
&trans          &trans     &trans        &trans        &trans   &trans                                  &trans     &kp MINUS  &kp EQUAL  &kp GRAVE   &kp SQT      &trans
&trans          &trans     &trans        &trans        &trans   &trans    &trans            &trans      &trans     &trans     &trans     &trans      &kp BSLH     &trans
&trans          &trans     &trans        &trans        &trans   &trans    &trans            &trans      &trans                                       &trans       &trans
            >;
        };

        nav {
            label = "nav";
            bindings = <
&trans          &trans     &trans        &trans        &trans   &trans                                  &trans     &trans        &trans     &trans      &trans       &trans
&trans          &trans     &trans        &trans        &trans   &trans                                  &trans     &kp PG_UP     &kp UP     &kp PG_DN   &trans       &trans
&trans          &trans     &trans        &trans        &trans   &trans                                  &trans     &kp LEFT      &kp DOWN   &kp RIGHT   &kp SQT      &trans
&trans          &trans     &trans        &trans        &trans   &trans    &trans            &trans      &trans     &trans        &trans     &trans      &trans       &trans
&trans          &trans     &trans        &trans        &trans   &trans    &trans            &trans      &trans                                          &trans       &trans
            >;
        };

        sys {
            label = "sys";
            bindings = <
&trans          &trans     &trans        &trans        &trans   &trans                                  &trans        &trans        &trans        &trans        &trans         &trans
&trans          &kp F1     &kp F2        &kp F3        &kp F4   &trans                                  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &bt BT_CLR
&trans          &kp F5     &kp F6        &kp F7        &kp F8   &trans                                  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_MUTE    &trans        &trans         &trans
&trans          &kp F9     &kp F10       &kp F11       &kp F12  &trans    &trans            &trans      &to DFLT      &to RNAV      &trans        &trans        &trans         &trans
&trans          &trans     &trans        &trans        &trans   &trans    &trans            &trans      &trans                                                  &trans         &trans
            >;
        };

        csr {
            label = "csr";
            bindings = <
&trans  &trans    &trans    &trans  &trans     &trans                    &trans         &trans     &trans     &trans     &trans     &trans
&trans  &trans    &trans    &trans  &trans     &trans                    &trans         &trans     &trans     &trans     &trans     &trans
&trans  &trans    &trans    &trans  &trans     &trans                    &trans         &mkp LCLK  &mkp RCLK  &mkp MCLK  &trans     &trans
&trans  &trans    &trans    &trans  &trans     &trans  &trans    &trans  &trans         &trans     &trans     &trans     &trans     &trans
&trans  &trans    &trans    &trans  &trans     &trans  &trans    &trans  &trans                                          &trans     &trans
            >;
        };

        scr {
            label = "scr";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans  &trans
            >;
        };
    };
};
